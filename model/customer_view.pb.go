// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: customer_view.proto

// this will be package of the generated code

package model

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message structure
type ReqCustomerById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field number 1-15 use 1 byte, while field 16th - 2047th use 2 bytes
	// So, the first 15 fields should be reserved for fields that are used oftenly
	SearchId int32 `protobuf:"varint,1,opt,name=searchId,proto3" json:"searchId,omitempty"`
}

func (x *ReqCustomerById) Reset() {
	*x = ReqCustomerById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_view_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCustomerById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCustomerById) ProtoMessage() {}

func (x *ReqCustomerById) ProtoReflect() protoreflect.Message {
	mi := &file_customer_view_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCustomerById.ProtoReflect.Descriptor instead.
func (*ReqCustomerById) Descriptor() ([]byte, []int) {
	return file_customer_view_proto_rawDescGZIP(), []int{0}
}

func (x *ReqCustomerById) GetSearchId() int32 {
	if x != nil {
		return x.SearchId
	}
	return 0
}

type ResCustomerById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ResCustomerById_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ResCustomerById) Reset() {
	*x = ResCustomerById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_view_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCustomerById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCustomerById) ProtoMessage() {}

func (x *ResCustomerById) ProtoReflect() protoreflect.Message {
	mi := &file_customer_view_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCustomerById.ProtoReflect.Descriptor instead.
func (*ResCustomerById) Descriptor() ([]byte, []int) {
	return file_customer_view_proto_rawDescGZIP(), []int{1}
}

func (x *ResCustomerById) GetResults() []*ResCustomerById_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ResCustomerById_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ResCustomerById_Result) Reset() {
	*x = ResCustomerById_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_view_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCustomerById_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCustomerById_Result) ProtoMessage() {}

func (x *ResCustomerById_Result) ProtoReflect() protoreflect.Message {
	mi := &file_customer_view_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCustomerById_Result.ProtoReflect.Descriptor instead.
func (*ResCustomerById_Result) Descriptor() ([]byte, []int) {
	return file_customer_view_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ResCustomerById_Result) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResCustomerById_Result) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResCustomerById_Result) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_customer_view_proto protoreflect.FileDescriptor

var file_customer_view_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x2d, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x4a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x32, 0x54, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x72, 0x65, 0x71, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_customer_view_proto_rawDescOnce sync.Once
	file_customer_view_proto_rawDescData = file_customer_view_proto_rawDesc
)

func file_customer_view_proto_rawDescGZIP() []byte {
	file_customer_view_proto_rawDescOnce.Do(func() {
		file_customer_view_proto_rawDescData = protoimpl.X.CompressGZIP(file_customer_view_proto_rawDescData)
	})
	return file_customer_view_proto_rawDescData
}

var file_customer_view_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_customer_view_proto_goTypes = []interface{}{
	(*ReqCustomerById)(nil),        // 0: model.reqCustomerById
	(*ResCustomerById)(nil),        // 1: model.resCustomerById
	(*ResCustomerById_Result)(nil), // 2: model.resCustomerById.Result
}
var file_customer_view_proto_depIdxs = []int32{
	2, // 0: model.resCustomerById.results:type_name -> model.resCustomerById.Result
	0, // 1: model.CustomerService.GetCustomerById:input_type -> model.reqCustomerById
	1, // 2: model.CustomerService.GetCustomerById:output_type -> model.resCustomerById
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_customer_view_proto_init() }
func file_customer_view_proto_init() {
	if File_customer_view_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_customer_view_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCustomerById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_view_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCustomerById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_view_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCustomerById_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_customer_view_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_customer_view_proto_goTypes,
		DependencyIndexes: file_customer_view_proto_depIdxs,
		MessageInfos:      file_customer_view_proto_msgTypes,
	}.Build()
	File_customer_view_proto = out.File
	file_customer_view_proto_rawDesc = nil
	file_customer_view_proto_goTypes = nil
	file_customer_view_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	// PingPongService has a method, which is StartPing
	GetCustomerById(ctx context.Context, in *ReqCustomerById, opts ...grpc.CallOption) (*ResCustomerById, error)
}

type customerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomerServiceClient(cc grpc.ClientConnInterface) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) GetCustomerById(ctx context.Context, in *ReqCustomerById, opts ...grpc.CallOption) (*ResCustomerById, error) {
	out := new(ResCustomerById)
	err := c.cc.Invoke(ctx, "/model.CustomerService/GetCustomerById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	// PingPongService has a method, which is StartPing
	GetCustomerById(context.Context, *ReqCustomerById) (*ResCustomerById, error)
}

// UnimplementedCustomerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServiceServer struct {
}

func (*UnimplementedCustomerServiceServer) GetCustomerById(context.Context, *ReqCustomerById) (*ResCustomerById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerById not implemented")
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_GetCustomerById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCustomerById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetCustomerById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.CustomerService/GetCustomerById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetCustomerById(ctx, req.(*ReqCustomerById))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCustomerById",
			Handler:    _CustomerService_GetCustomerById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer_view.proto",
}
